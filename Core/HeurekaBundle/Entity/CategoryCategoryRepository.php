<?php

namespace Core\HeurekaBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CategoryCategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CategoryCategoryRepository extends EntityRepository
{
    public function setHint(\Doctrine\ORM\Query $query)
    {
        return $query->setHint(\Doctrine\ORM\Query::HINT_CUSTOM_OUTPUT_WALKER, 'Gedmo\\Translatable\\Query\\TreeWalker\\TranslationWalker');
    }

    public function getCategoryCategoryQueryBuilder()
    {
        $queryBuilder = $this->getEntityManager()->createQueryBuilder()
                ->select("hcc, c")
                ->from("CoreHeurekaBundle:CategoryCategory", "hcc")
                ->leftJoin("hcc.category", "c")
                ->addOrderBy("c.lft");

        return $queryBuilder;
    }
    
    public function getCategoryCategoryQuery()
    {
        return $this->setHint($this->getCategoryCategoryQueryBuilder()->getQuery());
    }
    
    public function getHeurekaCategoriesArray($categoryIds = array(), $locale = null) 
    {
        $qb = $this->getCategoryCategoryQueryBuilder()
            ->select("hcc.heurekaCategory as heureka, c.id as category");
        if (!empty($categoryIds)) {
            $qb->andWhere($qb->expr()->in("c.id", ":categoryIds"))
                ->setParamater(":categoryIds", $categoryIds);
        }
        
        $query = $this->setHint($qb->getQuery());
        if ($locale) {
            $query->setHint(
                \Gedmo\Translatable\TranslatableListener::HINT_TRANSLATABLE_LOCALE,
                $locale // take locale from session or request etc.
            );
        }
        $result = array();
        $iterator = $query->getArrayResult();
        foreach ($iterator as $key => $entity) {
           $result[$entity['category']] = $entity;
        }

        return $result;
    }
}
